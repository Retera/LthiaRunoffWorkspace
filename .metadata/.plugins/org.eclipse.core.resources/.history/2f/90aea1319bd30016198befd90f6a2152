package edu.purdue.agriculture.thia;

public final class LthiaUtils {
	public static double computeQ(final double precipitation, final double minimumPrecipitation, final double S) {
		double Q = 0;
		if (precipitation > minimumPrecipitation && S != 0) {
			Q = Math.pow((precipitation - (0.2 * S)), 2) / (precipitation + (0.8 * S));
			return Q;
		}
		return Q;
	}

	/**
	 * Compute the S value from the LTHIA equations.
	 * 
	 * @see https://engineering.purdue.edu/mapserve/LTHIA7/lthianew/documnt/scs.php
	 * 
	 * @param curveNumber
	 * @param units
	 * @return
	 */
	public static double computeS(final int curveNumber, final Units units) {
		if (units == Units.INCHES) {
			if (curveNumber == 0) {
				return 0;
			} else {
				return (1000 / curveNumber) - 10;
			}
		} else if (units == Units.MILLIMETERS) {
			if (curveNumber == 0) {
				return 0;
			} else {
				return (25400 / curveNumber) - 254;
			}
		} else {
			throw new RuntimeException("Invalid units specified to compute S value for LTHIA");
		}
	}

	public static enum Units {
		INCHES, MILLIMETERS;
	}

	private LthiaUtils() {

	}
}
